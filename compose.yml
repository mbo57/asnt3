version: '3.7'
# 今回のdocker-compose.ymlでは意味ないがlogの設定を別にして使いまわししやすくしている
x-logging:
  &default-logging
  options:
    max-size: '12m'
    max-file: '5'
  driver: json-file

services:
  # flutter:
  #   container_name: flutter
  #   build:
  #     context: ./build/flutter
  #     args:
  #       # Dockerfile内でARGしている変数に.envに定義した値を代入。
  #       - ubuntu_version=${UBUNTU_VERSION}
  #       - timezone=${TIMEZONE}
  #       - web_server_port=${WEB_SERVER_PORT}
  #       - flutter_src_path_container=${FLUTTER_SRC_PATH_CONTAINER}
  #   tty: true
  #   env_file: .env
  #   volumes:
  #     - ${FLUTTER_SRC_PATH_HOST}:${FLUTTER_SRC_PATH_CONTAINER}${FLUTTER_CONTAINER_FLAG}
  #   logging: *default-logging
  #   # web-serverとして動作させるためにportを指定。
  #   ports:
  #     - "2525:2525"
  #   networks:
  #     - frontend

  frontend:
    container_name: frontend
    build:
      context: ./build/nodejs
      args:
        - frontend_src_path_container=${FRONTEND_SRC_PATH_CONTAINER}
    env_file: .env
    depends_on:
      - backend
    volumes:
      - ${FRONTEND_SRC_PATH_HOST}:${FRONTEND_SRC_PATH_CONTAINER}
      - node-modules:${FRONTEND_SRC_PATH_CONTAINER}/node_modules
    ports:
      - "$WEB_SERVER_PORT:$WEB_SERVER_PORT"
    networks:
      - frontend
    tty: true

  backend:
    tty: true
    container_name: backend
    depends_on:
      - db
    build:
      context: ./build/go/
      args:
        - backend_src_path_container=${BACKEND_SRC_PATH_CONTAINER}
    env_file: .env
    ports:
      - "$BACKEND_PORT:$BACKEND_PORT"
    volumes:
      - ${BACKEND_SRC_PATH_HOST}:${BACKEND_SRC_PATH_CONTAINER}
    networks:
      - frontend
      - backend

  db:
    container_name: mysql
    build:
      context: ./build/mysql/
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "$DB_PORT:$DB_PORT"
    volumes:
      - ./build/mysql/conf:/etc/mysql/conf.d 
      - ./build/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - backend

  mdbook:
    build: ./build/mdbook/
    env_file: .env
    ports:
      - "$MDBOOK_PORT:$MDBOOK_PORT"
    volumes:
      - "./docs:/docs"

networks:
  frontend:
  backend:

volumes:
  node-modules:
